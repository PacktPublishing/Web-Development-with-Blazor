@*<Page>*@
@page "/post/{BlogPostId:int}"
@*</Page>*@
@*<InjectAPI>*@
@inject IMyBlogApi api
@inject NavigationManager navman
@*</InjectAPI>*@

@*<ShowingThePost>*@
@if (BlogPost != null)
{
    <Title Value="@BlogPost.Title"></Title>
    <Meta property="og:title" content="@BlogPost.Title" />
    <Meta property="og:description" content="@(new string(BlogPost.Text.Take(100).ToArray()))" />
    <Meta property="og:image" content="@($"{navman.BaseUri}/pathtoanimage.png")" />
    <Meta property="og:url" content="@navman.Uri" />
    <Meta name="twitter:card" content="@(new string(BlogPost.Text.Take(100).ToArray()))" />
    <h3>@BlogPost.Title</h3>
    @((MarkupString)BlogPost.Text)
}

@*</ShowingThePost>*@
@code {
    @*<BlogPostId>*@
    [Parameter]
    public int BlogPostId { get; set; }
    @*</BlogPostId>*@

    @*<BlogPost>*@
    public BlogPost BlogPost { get; set; }
    @*</BlogPost>*@

    @*<OnParametersSetAsync>*@
    protected async override Task OnParametersSetAsync()
    {
        BlogPost = await api.GetBlogPostAsync(BlogPostId);
        await base.OnParametersSetAsync();
    }
    @*</OnParametersSetAsync>*@
}
